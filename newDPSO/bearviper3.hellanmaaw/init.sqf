////////////////////////////////////////////////////////////////////////////////
//                           init.sqf                                         //
//              this file is executed on both server and clients              //
////////////////////////////////////////////////////////////////////////////////
#include "script_component.hpp"

////////////////////////////////////////////////////////////////////////////////
// DPSO INITIALIZATION
////////////////////////////////////////////////////////////////////////////////
enableRadio false;
Server = missionNamespace;
waitUntil {!isNil "BIS_fnc_init"}; // waiting for BI's functions
enableSaving [false, false];

////////////////////////////////////////////////////////////////////////////////
// SETTING DEV VARIABLES
////////////////////////////////////////////////////////////////////////////////

DPSO_version = "1.00";
DPSO_debug = true; // [bool] true (if yes) or false (if no) - default: false
DPSO_updateNotice = [false, parseNumber DPSO_version]; // [bool, number] true if a notice must be displayed once a new update is released

////////////////////////////////////////////////////////////////////////////////
// INITIALIZING MISSION
////////////////////////////////////////////////////////////////////////////////
// DUDA
execVM "scripts\duda\fn_advancedTowingInit.sqf"; // towing script
execVM "scripts\duda\fn_advancedSlingLoadingInit.sqf"; // towing script

// BANGABOB
null = allUnits execVM "scripts\BangaBob\dragDeadBody\H8_dragBody.sqf"; // DRAG DEAD BODY SCRIPT

////////////////////////////////////////////////////////////////////////////////
// Disable Ambient Animals
////////////////////////////////////////////////////////////////////////////////

[{time > 0}, {enableEnvironment [false, false];}] call CBA_fnc_waitUntilAndExecute;

////////////////////////////////////////////////////////////////////////////////
// Shut the hell up  - Mute Orders and Reports
////////////////////////////////////////////////////////////////////////////////

{_x setSpeaker "NoVoice"} forEach playableUnits;

enableSentences false;

////////////////////////////////////////////////////////////////////////////////
// Interior Light script
////////////////////////////////////////////////////////////////////////////////

nul=[] execVM "scripts\InteriorLight\IntLight.sqf";

////////////////////////////////////////////////////////////////////////////////
// zbe Cache        																							
////////////////////////////////////////////////////////////////////////////////
//[AiCacheDistance(players),TargetFPS(-1 for Auto),Debug,CarCacheDistance,AirCacheDistance,BoatCacheDistance]execvm "zbe_cache\main.sqf";

// if (isServer) then {[1400,-1,DPSO_debug,1400,1400,1400]execvm "scripts\zbe_cache\main.sqf"};

////////////////////////////////////////////////////////////////////////////////
// Snow Storm
////////////////////////////////////////////////////////////////////////////////
if (hasInterface) then {
    #include "Snow\fn_init.sqf"
};
waitUntil {time > 0};
enableEnvironment false;
